{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "patternProperties": {
    "^input:[0-9]+$": {
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the Input component instance"
        },
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "boolean"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "(only for type switch, button) State of the input (null if the input instance is stateless, i.e. for type button)",
          "default": "n/a"
        },
        "percent": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "(only for type analog) Analog value in percent (null if valid value could not be obtained)",
          "default": "n/a"
        },
        "errors": {
          "type": "array",
          "description": "Shown only if at least one error is present. May contain out_of_range, read",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id"
      ]
    },
    "^switch:[0-9]+$": {
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the Switch component instance"
        },
        "source": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "Source of the last command, for example: init, WS_in, http, ...",
          "default": null
        },
        "output": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "true if the output channel is currently on, false otherwise",
          "default": "n/a"
        },
        "timer_started_at": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "Unix timestamp, start time of the timer (in UTC) (shown if the timer is triggered)",
          "default": "n/a"
        },
        "timer_duration": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "Duration of the timer in seconds (shown if the timer is triggered)",
          "default": "n/a"
        },
        "apower": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured instantaneous active power (in Watts) delivered to the attached load (shown if applicable)",
          "default": "n/a"
        },
        "voltage": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured voltage in Volts (shown if applicable)",
          "default": "n/a"
        },
        "current": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured current in Amperes (shown if applicable)",
          "default": "n/a"
        },
        "pf": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured power factor (shown if applicable)",
          "default": "n/a"
        },
        "freq": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured network frequency in Hz (shown if applicable)",
          "default": "n/a"
        },
        "aenergy": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "object"
            }
          ],
          "properties": {
            "total": {
              "type": "number",
              "description": "Total energy consumed in Watt-hours"
            },
            "by_minute": {
              "type": "array",
              "description": "Energy consumption by minute (in Milliwatt-hours) for the last three minutes (the lower the index of the element in the array, the closer to the current moment the minute)",
              "items": {
                "type": "number"
              }
            },
            "minute_ts": {
              "type": "number",
              "description": "Unix timestamp of the first second of the last minute (in UTC)"
            }
          },
          "default": "n/a"
        },
        "temperature": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "object"
            }
          ],
          "properties": {
            "tC": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Temperature in Celsius (null if temperature is out of the measurement range)",
              "default": null
            },
            "tF": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Temperature in Fahrenheit (null if temperature is out of the measurement",
              "default": null
            }
          },
          "default": "n/a"
        },
        "errors": {
          "type": "array",
          "description": "Error conditions occurred. May contain overtemp, overpower, overvoltage, (shown if at least one error is present)",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id"
      ]
    },
    "^cover:[0-9]+$": {
      "properties": {
        "id": {
          "type": "number",
          "description": "The numeric ID of the Cover component instance"
        },
        "source": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "Source of the last command",
          "default": null
        },
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "string",
              "enum": [
                "open",
                "closed",
                "opening",
                "closing",
                "stopped",
                "calibrating"
              ]
            }
          ],
          "description": "One of open (Cover is fully open), closed (Cover is fully closed), opening (Cover is actively opening), closing (Cover is actively closing), stopped (Cover is not moving, and is neither fully open nor fully closed, or the open/close state is unknown), calibrating (Cover is performing a calibration procedure)",
          "default": "n/a"
        },
        "apower": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Active power in Watts",
          "default": "n/a"
        },
        "voltage": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured voltage in Volts (shown if applicable)",
          "default": "n/a"
        },
        "current": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured current in Amperes (shown if applicable)",
          "default": "n/a"
        },
        "pf": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured power factor (shown if applicable)",
          "default": "n/a"
        },
        "freq": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Last measured network frequency in Hz (shown if applicable)",
          "default": "n/a"
        },
        "aenergy": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "object"
            }
          ],
          "properties": {
            "total": {
              "type": "number",
              "description": "Total energy consumed in Watt-hours"
            },
            "by_minute": {
              "type": "array",
              "description": "Energy consumption by minute (in Milliwatt-hours) for the last three minutes (the lower the index of the element in the array, the closer to the current moment the minute)",
              "items": {
                "type": "number"
              }
            },
            "minute_ts": {
              "type": "number",
              "description": "Unix timestamp of the first second of the last minute (in UTC)"
            }
          },
          "default": "n/a"
        },
        "current_pos": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "Only present if Cover is calibrated. Represents current position in percent from 0 (fully closed) to 100 (fully open); null if position is unknown",
          "default": "n/a"
        },
        "target_pos": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "Only present if Cover is calibrated and is actively moving to a requested position in either open or close directions. Represents the target position in percent from 0 (fully closed) to 100 (fully open); null if target position has been reached or the movement was cancelled",
          "default": "n/a"
        },
        "move_timeout": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Seconds, only present if Cover is actively moving in either open or close directions. Cover will automatically stop after the timeout expires",
          "default": "n/a"
        },
        "move_started_at": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Only present if Cover is actively moving in either open or close directions. Represents the time at which the movement has begun",
          "default": "n/a"
        },
        "pos_control": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "False if Cover is not calibrated and only discrete open/close is possible; true if Cover is calibrated and can be commanded to go to arbitrary positions between fully open and fully closed",
          "default": "n/a"
        },
        "temperature": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "object"
            }
          ],
          "properties": {
            "tC": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Temperature in Celsius (null if temperature is out of the measurement range)",
              "default": null
            },
            "tF": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Temperature in Fahrenheit (null if temperature is out of the measurement",
              "default": null
            }
          },
          "default": "n/a"
        },
        "errors": {
          "type": "array",
          "description": "Error conditions occurred. May contain overtemp, overpower, overvoltage, (shown if at least one error is present)",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id"
      ]
    },
    "^light:[0-9]+$": {
      "properties": {
        "id": {
          "type": "number",
          "description": "The numeric ID of the Cover component instance"
        },
        "source": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "Source of the last command, for example: init, WS_in, http, ...",
          "default": null
        },
        "output": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "True if the output channel is currently on, false otherwise",
          "default": "n/a"
        },
        "brightness": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Current brightness level (in percent)",
          "default": "n/a"
        },
        "timer_started_at": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Unix timestamp, start time of the timer (in UTC) (shown if the timer is triggered)",
          "default": "n/a"
        },
        "timer_duration": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Duration of the timer in seconds (shown if the timer is triggered)",
          "default": "n/a"
        }
      },
      "required": [
        "id"
      ]
    },
    "^temperature:[0-9]+$": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the Temperature component instance"
        },
        "tC": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "Temperature in Celsius (null if valid value could not be obtained)",
          "default": "n/a"
        },
        "tF": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "Temperature in Fahrenheit (null if valid value could not be obtained)",
          "default": "n/a"
        },
        "errors": {
          "type": "array",
          "description": "Shown only if at least one error is present. May contain out_of_range, read when there is problem reading sensor",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id"
      ]
    },
    "^humidity:[0-9]+$": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the Humidity component instance"
        },
        "rh": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "Relative humidity in % (null if valid value could not be obtained)",
          "default": "n/a"
        },
        "errors": {
          "type": "array",
          "description": "Shown only if at least one error is present. May contain out_of_range, read when there is problem reading sensor",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id"
      ]
    },
    "^voltmeter:[0-9]+$": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the Voltmeter component instance"
        },
        "voltage": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "Voltage in volts (null if valid value could not be obtained)",
          "default": "n/a"
        },
        "xvoltage": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "description": "voltage transformed with config.xvoltage.expr. Present only when both config.xvoltage.expr and config.xvoltage.unit are set to non-empty values. null if config.xvoltage.expr can not be evaluated.",
          "default": "n/a"
        },
        "errors": {
          "type": "array",
          "description": "Shown only if at least one error is present. May contain out_of_range, read when there is problem reading sensor",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id"
      ]
    },
    "^script:[0-9]+$": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the script"
        },
        "running": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "true if the script is currently running, false otherwise",
          "default": "n/a"
        },
        "errors": {
          "type": "array",
          "description": "Shown only if at least one error is present. May contain out_of_range, read when there is problem reading sensor",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id"
      ]
    },
    "^devicepower:[0-9]+$": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the script"
        },
        "battery": {
          "type": "object",
          "properties": {
            "V": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Battery voltage in Volts (null if valid value could not be obtained)",
              "default": null
            },
            "percent": {
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Battery charge level in % (null if valid value could not be obtained)",
              "default": null
            }
          },
          "description": "Information about the battery charge"
        },
        "external": {
          "type": "object",
          "properties": {
            "present": {
              "type": "boolean",
              "description": "Whether external power source is connected",
              "default": false
            }
          },
          "description": "Information about the external power source (only available if external power source is supported)"
        },
        "errors": {
          "type": "array",
          "description": "Shown only if at least one error is present. May contain out_of_range, read when there is problem reading sensor",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id",
        "battery"
      ]
    },
    "^smoke:[0-9]+$": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Id of the Smoke component instance"
        },
        "alarm": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Alarm state",
          "default": "n/a"
        },
        "mute": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "boolean"
            }
          ],
          "description": "Mute state",
          "default": "n/a"
        },
        "errors": {
          "type": "array",
          "description": "Shown only if at least one error is present. May contain out_of_range, read when there is problem reading sensor",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "required": [
        "id"
      ]
    }
  },
  "properties": {
    "wifi": {
      "type": "object",
      "properties": {
        "sta_ip": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "Ip of the device in the network (null if disconnected)",
          "default": null
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "string"
            }
          ],
          "description": "Status of the connection. Range of values: disconnected, connecting, connected, got ip",
          "default": "n/a"
        },
        "ssid": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "Ssid of the network (null if disconnected)",
          "default": null
        },
        "rssi": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Strength of the signal in dBms",
          "default": "n/a"
        },
        "ap_client_count": {
          "oneOf": [
            {
              "type": "string",
              "enum": ["n/a"]
            },
            {
              "type": "number"
            }
          ],
          "description": "Number of clients connected to the access point. Present only when AP is enabled and range extender functionality is present and enabled.",
          "default": "n/a"
        }
      }
    },
    "ethernet": {
      "type": "object",
      "properties": {
        "ip": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "description": "IP of the device in the network",
          "default": null
        }
      }
    }
  }
}
